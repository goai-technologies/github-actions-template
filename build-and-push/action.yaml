name: "Build and Push Docker to ECR"
description: "Reusable composite action to build and push Docker image to AWS ECR"
author: "Your Name or Org"

permissions:
  id-token: write

inputs:
  service:
    description: "The service name (e.g., frontend or backend)"
    required: true
  environment:
    description: "Deployment environment (develop, staging, prod)"
    required: true
  image_tag:
    description: "Image tag to push (e.g., commit SHA)"
    required: false
    default: "latest"
  aws-region:
    description: "AWS region for ECR"
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials from OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Amazon ECR
      shell: bash
      run: |
        aws ecr get-login-password --region ${{ inputs.aws-region }} | docker login \
          --username AWS \
          --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com

    - name: Build and tag Docker image
      shell: bash
      run: |
        ECR_REPO="${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.service }}/${{ inputs.environment }}"
        
        # Build with the specified tag (e.g., commit SHA)
        docker build -t "$ECR_REPO:${{ inputs.image_tag }}" .

        # Also tag it as :latest for convenience
        docker tag "$ECR_REPO:${{ inputs.image_tag }}" "$ECR_REPO:latest"

    - name: Push Docker images to ECR
      shell: bash
      run: |
        ECR_REPO="${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.service }}/${{ inputs.environment }}"
        
        docker push "$ECR_REPO:${{ inputs.image_tag }}"
        docker push "$ECR_REPO:latest"
